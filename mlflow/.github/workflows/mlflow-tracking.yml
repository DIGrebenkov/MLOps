name: MLflow Training Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  train:
    runs-on: ubuntu-latest
    container:
      image: pytorch/pytorch:2.2.1-cuda11.8-cudnn8-runtime
      
    services:
      mlflow:
        image: mlflow/mlflow
        ports:
          - 5000:5000
        env:
          MLFLOW_ARTIFACT_ROOT: ./mlruns
          MLFLOW_BACKEND_STORE_URI: sqlite:///mlflow.db
        options: >-
          --health-cmd "curl -f http://localhost:5000 || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y git-lfs
        git lfs install
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install mlflow transformers torch sklearn tqdm matplotlib pandas regex ahocorasick
        
    - name: Create directories
      run: |
        mkdir -p ./images
        
    - name: Run training with MLflow tracking
      run: |
        python -c "
        from IPython import start_ipython
        start_ipython(argv=['--TerminalIPythonApp.force_interact=True'], user_ns=globals())
        " < foldlearner.ipynb
      env:
        MLFLOW_TRACKING_URI: http://localhost:5000
        
    - name: Upload MLflow artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: mlflow-artifacts
        path: ./mlruns/
        
    - name: Upload metrics plots
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: training-plots
        path: ./images/
